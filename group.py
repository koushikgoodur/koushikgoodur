# -*- coding: utf-8 -*-
"""group.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RsrugtLd6feQwlOuhOZMVlP0Tlh6DS5-
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib import pyplot
from pandas import set_option

df = pd.read_csv('Bollywood songs.csv')

df

df = df.rename({'Unnamed: 0': 'UserID'}, axis=1)

df

df=df.fillna(df.mean())

df

df = df.replace('10-Oct', np.NaN)
replace = df.fillna(df.mode().iloc[0], inplace=True)

df = df.replace('09-Oct', np.NaN)
replace = df.fillna(df.mode().iloc[0], inplace=True)

df

df["UserID"].replace({"8.8/10": "2421"}, inplace=True)

df

df.isnull().sum()

df.info()

df.shape

df=df.rename(columns={'Song-Name':'Song','Singer/Artists':'Singer','Album/Movie':'Movie','User-Rating':'Rating'})
df

df['Rating'] = df['Rating'].str.replace('/10', '')
df

df['UserID'] = pd.to_numeric(df['UserID'],errors = 'coerce')
df['Rating'] = pd.to_numeric(df['Rating'],errors = 'coerce')
df

df.dtypes

df.info()

df.describe()

df.corr()

sns.displot(x='Rating',y='Genre',data=df)
plt.figure(figsize=(50,40))
plt.show()

sns.displot(x='Song',y='Genre',data=df)
plt.figure(figsize=(50,40))
plt.show()

sns.barplot(x='Song',y='Rating',data=df)
plt.title("Song vs Rating")
plt.xlabel('Song')
plt.ylabel('Rating')

sns.set_style(style='darkgrid')
plt.figure(figsize=(10,10))
famous = df.sort_values("Rating",ascending=False).head(10)
sns.barplot(y='Song',x='Rating',data=famous).set(title="Top 10 Movie By Rating")
plt.xlabel('Rating')
plt.ylabel('Song')
plt.show()

df.plot(kind='box', subplots=True, layout=(3,3), sharex=False, sharey=False)
pyplot.show()

from matplotlib import pyplot
from pandas import read_csv
import numpy

correlations = df.corr()
# plot correlation matrix
fig = pyplot.figure()
ax = fig.add_subplot(111) #"111" means "1x1 grid, first subplot" 
cax = ax.matshow(correlations, vmin=-1, vmax=1)
fig.colorbar(cax)
pyplot.show()

df.plot(kind='density', subplots=True, layout=(3,3), sharex=False)
pyplot.show()

df.hist(figsize=(12, 8))
pyplot.show()

from pandas.plotting import scatter_matrix

scatter_matrix(df)
pyplot.show()

plt.figure(figsize = (10,8))
sns.heatmap(df.corr())
df.corr()

len(df.UserID.unique())

len(df.Genre.unique())

song=df.pivot_table(index='UserID',columns='Genre',values='Rating').reset_index(drop=True)
song

song.index=df.UserID.unique()

song.fillna(0,inplace=True)
song

from sklearn.metrics import pairwise_distances
from scipy.spatial.distance import correlation,cosine

user_sim=1-pairwise_distances(song.values,metric='cosine')
user_sim

user_df=pd.DataFrame(user_sim)
user_df

user_df.index=df.UserID.unique()
user_df.columns=df.UserID.unique()

user_df.iloc[0:5 ,0:5]

np.fill_diagonal(user_sim,0)
user_df.iloc[0:5 ,0:5]

user_df.idxmax(axis=1)[0:5]

user_df.idxmax(axis=1)

df[(df['UserID']==2)|(df['UserID']==31)]

df[(df['UserID']==5)|(df['UserID']==10)]

df[(df['UserID']==2416)|(df['UserID']==1)]

user1=df[(df['UserID']==2)]
user2=df[(df['UserID']==5)]

user1

user2.Movie

pd.merge(user1,user2,on='Movie',how='outer')

def onehot_encode(df,columns,prefix):
    df = df.copy()
    dummies = pd.get_dummies(df[columns],prefix=prefix)
    df = pd.concat([df,dummies],axis=1)
    df = df.drop(columns,axis=1)
    return df

df = onehot_encode(df,'Song','Song')
df = onehot_encode(df,'Singer','Singer')
df = onehot_encode(df,'Genre','Genre')
df = onehot_encode(df,'Movie','Movie')

df





